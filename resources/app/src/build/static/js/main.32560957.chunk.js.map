{"version":3,"sources":["components/URLInputForm.tsx","components/Page.tsx","api/check-validation.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","margin","spacing","marginTop","paper","constructQueryParamerts","gitHubUrls","queryParamerts","forEach","url","index","Inputs","classes","setValidationResponse","res","Object","keys","key","eval","split","join","useState","gitHubUrl_1","setGitHubUrl_1","gitHubUrl_2","setGitHubUrl_2","gitHubUrl_3","setGitHubUrl_3","gitHubUrl_4","setGitHubUrl_4","gitHubUrl_1_validationResponse","setGitHubUrl_1_validationResponse","gitHubUrl_2_validationResponse","setGitHubUrl_2_validationResponse","gitHubUrl_3_validationResponse","setGitHubUrl_3_validationResponse","gitHubUrl_4_validationResponse","setGitHubUrl_4_validationResponse","autoComplete","variant","className","value","onChange","event","target","error","type","id","label","placeholder","helperText","elevation","color","startIcon","style","marginRight","onClick","a","checkValidation","page","Page","props","styles","children","Promise","resolve","reject","URL","params","searchParams","append","fetch","toString","then","json","catch","routesConfig","path","exact","component","URLInputForm","registerRoutes","map","route","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32560957.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { CloudUpload, RateReview } from \"@material-ui/icons\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Page from \"./Page\";\nimport checkValidation from \"../api/check-validation\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& > *\": {\n        margin: theme.spacing(1),\n      },\n    },\n    marginTop: {\n      marginTop: \"2%\",\n    },\n    paper: {\n      marginTop: \"0.5%\",\n    },\n  })\n);\nfunction constructQueryParamerts(gitHubUrls: string[]) {\n  let queryParamerts: any = {};\n\n  gitHubUrls.forEach((url, index) => {\n    queryParamerts[`GitHubUrl_${index + 1}`] = url;\n  });\n  return queryParamerts;\n}\nexport default function Inputs() {\n  const classes = useStyles();\n\n  function setValidationResponse(res: any) {\n    Object.keys(res).forEach((key) => {\n\n      eval(`set${key}_validationResponse('${res[key].split(\"\\n\").join()}');`);\n    });\n  }\n\n  const [gitHubUrl_1, setGitHubUrl_1] = useState(\"\");\n  const [gitHubUrl_2, setGitHubUrl_2] = useState(\"\");\n  const [gitHubUrl_3, setGitHubUrl_3] = useState(\"\");\n  const [gitHubUrl_4, setGitHubUrl_4] = useState(\"\");\n\n  const [\n    gitHubUrl_1_validationResponse,\n    setGitHubUrl_1_validationResponse,\n  ] = useState(\"\");\n  const [\n    gitHubUrl_2_validationResponse,\n    setGitHubUrl_2_validationResponse,\n  ] = useState(\"\");\n  const [\n    gitHubUrl_3_validationResponse,\n    setGitHubUrl_3_validationResponse,\n  ] = useState(\"\");\n  const [\n    gitHubUrl_4_validationResponse,\n    setGitHubUrl_4_validationResponse,\n  ] = useState(\"\");\n\n  return (\n    <Page>\n      <form autoComplete=\"off\">\n        <Typography variant=\"h3\">\n          Welcome to the Development Engineering\n        </Typography>\n        <Typography variant=\"h5\">\n          CI/CD Self-Help Configuration File(s) Validation Portal\n        </Typography>\n        <div className={classes.marginTop}>\n          <TextField\n            value={gitHubUrl_1}\n            onChange={(event) => setGitHubUrl_1(event.target.value)}\n            error={false}\n            type=\"url\"\n            id=\"outlined-success-helper-text\"\n            label=\"GitHub URL\"\n            placeholder=\"https://github.com/raykauray/test-repos/blob/master/app.yaml\"\n            helperText=\"\"\n            variant=\"outlined\"\n          />\n          <Paper className={classes.paper} elevation={0}>\n            {/* <label>Validation Resonse:</label> */}\n            <Typography>{gitHubUrl_1_validationResponse}</Typography>\n          </Paper>\n        </div>\n        <div className={classes.marginTop}>\n          <TextField\n            value={gitHubUrl_2}\n            onChange={(event) => setGitHubUrl_2(event.target.value)}\n            error={false}\n            id=\"outlined-error-helper-text\"\n            label=\"GitHub URL\"\n            placeholder=\"http://github.com/yaml\"\n            helperText=\"\"\n            variant=\"outlined\"\n          />\n          <Paper className={classes.paper} elevation={0}>\n            {/* <label>Validation Resonse:</label> */}\n            <Typography>{gitHubUrl_2_validationResponse}</Typography>\n          </Paper>\n        </div>\n        <div className={classes.marginTop}>\n          <TextField\n            value={gitHubUrl_3}\n            onChange={(event) => setGitHubUrl_3(event.target.value)}\n            error={false}\n            id=\"outlined-error-helper-text\"\n            label=\"GitHub URL\"\n            placeholder=\"http://github.com/yaml\"\n            helperText=\"\"\n            variant=\"outlined\"\n          />\n          <Paper className={classes.paper} elevation={0}>\n            {/* <label>Validation Resonse:</label> */}\n            <Typography>{gitHubUrl_3_validationResponse}</Typography>\n          </Paper>\n        </div>\n        <div className={classes.marginTop}>\n          <TextField\n            value={gitHubUrl_4}\n            onChange={(event) => setGitHubUrl_4(event.target.value)}\n            error={false}\n            id=\"outlined-error-helper-text\"\n            label=\"GitHub URL\"\n            placeholder=\"http://github.com/yaml\"\n            helperText=\"\"\n            variant=\"outlined\"\n          />\n          <Paper className={classes.paper} elevation={0}>\n            {/* <label>Validation Resonse:</label> */}\n            <Typography>{gitHubUrl_4_validationResponse}</Typography>\n          </Paper>\n        </div>\n        <div>\n          <Button\n            className={classes.marginTop}\n            variant=\"contained\"\n            color=\"default\"\n            startIcon={<CloudUpload />}\n            style={{ marginRight: \"2%\" }}\n          >\n            Upload Files\n          </Button>\n          <Button\n            className={classes.marginTop}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<RateReview />}\n            onClick={async () => {\n              let queryParamerts = constructQueryParamerts([\n                gitHubUrl_1,\n                gitHubUrl_2,\n                gitHubUrl_3,\n                gitHubUrl_4,\n              ]);\n              let res = await checkValidation(queryParamerts);\n              setValidationResponse(res);\n            }}\n          >\n            Review Files\n          </Button>\n        </div>\n      </form>\n    </Page>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  page: {\n    margin: \"5%\",\n  },\n});\n\nexport default function Page(props: any) {\n  const styles = useStyles();\n  return <div className={styles.page}>{props.children}</div>;\n}\n","import { resolve } from \"dns\";\n\nexport default function checkValidation(gitHubUrls: any) {\n  return new Promise((resolve, reject) => {\n    let url = new URL(\"http://localhost:6659\");\n    let params: any = gitHubUrls;\n    Object.keys(params).forEach((key: string) => {\n      url.searchParams.append(key, params[key]);\n    });\n    fetch(url.toString())\n      .then((res) => res.json())\n      .then((res) => resolve(res))\n      .catch((res) => reject(res));\n  });\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport URLInputForm from \"./components/URLInputForm\";\n\nconst routesConfig = [\n  { path: \"/\", exact: true, component: () => <URLInputForm /> },\n];\n\nexport default function registerRoutes() {\n  return (\n    <Switch>\n      {routesConfig.map((route) => {\n        return (\n          <Route\n            exact={route.exact}\n            path={route.path}\n            render={() => {\n              return <route.component />;\n            }}\n          ></Route>\n        );\n      })}\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { HashRouter } from \"react-router-dom\";\nfunction App() {\n  return (\n    <HashRouter>\n      <Routes />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}